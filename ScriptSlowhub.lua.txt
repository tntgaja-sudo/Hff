loadstring(game:HttpGet(("https://raw.githubusercontent.com/daucobonhi/Ui-Redz-V2/refs/heads/main/UiREDzV2.lua")))()

       local Window = MakeWindow({
         Hub = {
         Title = "TNT Roblox",
         Animation = "By: TNT Roblox"
         },
        Key = {
        KeySystem = false,
        Title = "Key System",
        Description = "",
        KeyLink = "",
        Keys = {"1234"},
        Notifi = {
        Notifications = true,
        CorrectKey = "Running the Script...",
       Incorrectkey = "The key is incorrect",
       CopyKeyLink = "Copied to Clipboard"
      }
    }
  })

       MinimizeButton({
       Image = "http://www.roblox.com/asset/?id=83190276951914",
       Size = {60, 60},
       Color = Color3.fromRGB(10, 10, 10),
       Corner = true,
       Stroke = false,
       StrokeColor = Color3.fromRGB(255, 0, 0)
      })
      
--// SlowHub Demo UI
local Tab1 = MakeTab({Name = "main fram"})
local Tab2 = MakeTab({Name = "combat"})
local Tab3 = MakeTab({Name = "defense"})
local Tab4 = MakeTab({Name = "tộc v4"})
local Tab5 = MakeTab({Name = "sự kiện"})
local Tab6 = MakeTab({Name = "fishing"})
local Tab7 = MakeTab({Name = "teleport"})
local Tab8 = MakeTab({Name = "player"})
local Tab9 = MakeTab({Name = "devil fruit"})
local Tab10 = MakeTab({Name = "custom"})
local Tab11 = MakeTab({Name = "esp"})
local Tab12 = MakeTab({Name = "gamepass"})
local Tab13 = MakeTab({Name = "sea features"})
local Tab14 = MakeTab({Name = "Qliti of life"})
local Tab15 = MakeTab({Name = "troll"})
local Tab16 = MakeTab({Name = "dev tool"})
local Tab17 = MakeTab({Name = "misc"})
local Tab18 = MakeTab({Name = "settings"})
-- Player Tab (Tab8)

-- WalkSpeed Slider
AddSlider(Tab8, {
    Name = "WalkSpeed",
    Min = 16,
    Max = 200,
    Default = 16,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end
})

-- JumpPower Slider
AddSlider(Tab8, {
    Name = "JumpPower",
    Min = 50,
    Max = 500,
    Default = 50,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
    end
})

-- Infinite Jump Toggle
AddToggle(Tab8, {
    Name = "Infinite Jump",
    Default = false,
    Callback = function(Value)
        if Value then
            local UserInputService = game:GetService("UserInputService")
            _G.InfJump = true
            UserInputService.JumpRequest:Connect(function()
                if _G.InfJump then
                    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
                end
            end)
        else
            _G.InfJump = false
        end
    end
})

-- Fly Toggle
AddToggle(Tab8, {
    Name = "Fly",
    Default = false,
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        local char = player.Character
        local hum = char and char:FindFirstChildOfClass("Humanoid")
        if not hum then return end

        if Value then
            _G.Fly = true
            local bp = Instance.new("BodyPosition", char.HumanoidRootPart)
            local bg = Instance.new("BodyGyro", char.HumanoidRootPart)
            bp.MaxForce, bg.MaxTorque = Vector3.new(9e9,9e9,9e9), Vector3.new(9e9,9e9,9e9)

            spawn(function()
                while _G.Fly and char and hum and hum.Parent do
                    task.wait()
                    bp.Position = bp.Position + (char.HumanoidRootPart.CFrame.LookVector * 2)
                end
            end)
        else
            _G.Fly = false
            for _,v in pairs(char.HumanoidRootPart:GetChildren()) do
                if v:IsA("BodyPosition") or v:IsA("BodyGyro") then
                    v:Destroy()
                end
            end
        end
    end
})

-- NoClip Toggle
AddToggle(Tab8, {
    Name = "NoClip",
    Default = false,
    Callback = function(Value)
        local char = game.Players.LocalPlayer.Character
        if not char then return end
        _G.NoClip = Value

        game:GetService("RunService").Stepped:Connect(function()
            if _G.NoClip and char then
                for _, v in pairs(char:GetDescendants()) do
                    if v:IsA("BasePart") and v.CanCollide then
                        v.CanCollide = false
                    end
                end
            end
        end)
    end
})